<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Archer_Idle_Down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.Attacking = false
Idle = true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement + Sprites
x += 1 * (keyboard_check(vk_right) - keyboard_check(vk_left));
y += 1 * (keyboard_check(vk_down) - keyboard_check(vk_up));
image_speed = 0.1;
if keyboard_check_pressed(vk_left) and global.Attacking == false
{sprite_index = Archer_Walk_Left
Player.x = Player.x - 1
Idle = false};
if keyboard_check_pressed(vk_right) and global.Attacking == false
{sprite_index = Archer_Walk_Right
Idle = false};
if keyboard_check_pressed(vk_up) and global.Attacking == false
{sprite_index = Archer_Walk_Up
Idle = false};
if keyboard_check_pressed(vk_down) and global.Attacking == false
{sprite_index = Archer_Walk_Down
Idle = false};
else if keyboard_check_released(vk_down) or keyboard_check_released(vk_up) 
or keyboard_check_released(vk_right) or keyboard_check_released(vk_left) and global.Attacking == false
{sprite_index = Archer_Idle_Down
Player.x = Player.x
Idle = true};
//Attack Mouse
if mouse_check_button_pressed(mb_left)
{global.Attacking = true
instance_create(x,y, Arrow)};
else if mouse_check_button_released(mb_left)
{global.Attacking = false};

if global.Hoverdown = true and  global.Attacking == true  
{sprite_index = Archer_Attack_Down};
else if global.Hoverup = true and global.Attacking == true  
{sprite_index = Archer_Attack_Up};
else if global.Hoverright = true and  global.Attacking == true 
{sprite_index = Archer_Attack_Right};
else if global.Hoverleft = true and global.Attacking == true 
{sprite_index = Archer_Attack_Left};
else if global.Attacking == false and Idle == true
{sprite_index = Archer_Idle_Down};
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>4,4</point>
    <point>4,4</point>
  </PhysicsShapePoints>
</object>
